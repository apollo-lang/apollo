Program     : ""
            | Statements

Statements  : Statement
            | Statement Statements

Statement   : Definition
            | Expression

Definitions : Definition
            | Definition Definitions

Definition  : ID ':' Type '=' Expression
            | ID ':' '(' Params ')' '->' Type '=' Expression
            | TEMPO Expression

Type        : TYPE
            | '[' Type ']'

Param       : ID ':' Type
            | ID ':' '(' AnonParams ')' '->' Type

Params      : Param
            | Param ',' Params

AnonParam   : Type

AnonParams  : AnonParam
            | AnonParam ',' AnonParams

Expressions : Expression
            | Expression ',' Expressions

Expression  : Primitive
            | Derived
            | Lambda
            | FnCall
            | Conditional
            | Block
            | UnOp
            | BinOp
            | '(' Expression ')'
            | ID
            | Macro

Primitive   : NUM
            | BOOL
            | PITCH
            | DUR
            | '_'

Derived     : '(' Expression ',' Expression ')'
            | '(' '_' ',' Expression ')'
            | '[' Expressions ']'
            | '[' ']'

Lambda      : '\\' Params '->' Type ':' Expression

FnCall      :  ID '(' Expressions ')'
            | '(' Lambda ')' '(' Expressions ')'

Conditional : CASE '(' Expression ')' Expression OTHERWISE Expression
            | CASE '(' Expression ')' Expression Conditional

UnOp        : '-' Expression  %prec NEG
            | '!' Expression
            | 'h@' Expression
            | 't@' Expression

BinOp       : Expression '+'  Expression
            | Expression '-'  Expression
            | Expression '*'  Expression
            | Expression '/'  Expression
            | Expression '%'  Expression
            | Expression '==' Expression
            | Expression '!=' Expression
            | Expression '<'  Expression
            | Expression '>'  Expression
            | Expression '<=' Expression
            | Expression '>=' Expression
            | Expression '&&' Expression
            | Expression '||' Expression
            | Expression '::' Expression

Macro       : NUM '?' NUM

Block       : '{' Expression '}'
            | '{' Expression WHERE Definitions '}'

